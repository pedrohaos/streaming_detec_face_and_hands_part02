sevices ->
    -> toda logica de negocio
    -> toda chamada externa (API, arquivos, bancos de dados)

views ->
    ->toda a interação com o DOM (com o HTML, com a pagina)

controllers ->
    -> é a intermediaria entre (services e/ou workers) e views

factories ->
    -> a factory é quem importa as dependencias
    -> e cria o objeto final para fazermos as chamadas
    -> retorna a função que inicializa o fluxo daquele componente (init)

workers -> processo em segundo plano
    -> toda logica PESADA (que envolva CPU)
    -> tudo que pode travar a tela (loops, machine learning, AI, processomento de WEB CAM)
    -> ele chama as regras de negocio da service

index.js -> é responsavel por chamar todos as camadas
 